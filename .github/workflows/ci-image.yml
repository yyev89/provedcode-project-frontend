name: Frontend CI

on:
  workflow_dispatch:
  pull_request:
    branches:
      - "main"
  push:
    branches:
      - "main"
    tags:
      - "[0-9]*.[0-9]*.[0-9]*"

jobs:
  test:
    name: Test with NPM
    runs-on: ubuntu-22.04

    steps:
    - uses: actions/checkout@v4

    - name: Set up Nodejs
      uses: actions/setup-node@v4
      with:
        node-version: 18
        
    - name: Install dependencies
      run: npm install
      
    - name: Test with npm
      run: npm test


  qodana:
    name: Scan code with Qodana
    runs-on: ubuntu-22.04
    permissions:
      contents: write
      pull-requests: write
      checks: write

    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.sha }}
          fetch-depth: 0

      - name: 'Qodana Scan'
        uses: JetBrains/qodana-action@v2024.2
        with:
          args: --linter,jetbrains/qodana-js:2024.2
          pr-mode: false
        env:
          QODANA_TOKEN: ${{ secrets.QODANA_TOKEN }}
          QODANA_ENDPOINT: 'https://qodana.cloud'


  generate-image-tag:
    name: Generate image tag
    runs-on: ubuntu-22.04
    outputs:
      image_tag: ${{ steps.generate-image-tag.outputs.image_tag }}
    needs: [test, qodana]
    steps:
      - uses: actions/checkout@v4
        with:
          # Necessary to get all tags for IMAGE_TAG generation with git describe
          fetch-depth: 0

      - name: Generate image tag
        id: generate-image-tag
        run: |
          image_tag=$(git describe --tags --always --first-parent --match "[0-9]*.[0-9]*.[0-9]*")
          echo "image_tag=$image_tag" >> $GITHUB_OUTPUT


  docker-image:
    name: Build and push Docker image
    runs-on: ubuntu-22.04
    permissions:
      packages: write 
    needs: generate-image-tag

    steps:
      - uses: actions/checkout@v4

      - name: Login to GitHub container registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v6
        env:
          DOCKER_BUILD_SUMMARY: false
        with:
          push: true
          tags: |
            ghcr.io/${{ github.repository }}:latest
            ghcr.io/${{ github.repository }}:${{ needs.generate-image-tag.outputs.image_tag }}

      - name: Update image tag in the infrastructure repo
        uses: peter-evans/repository-dispatch@v3
        with:
          token: ${{ secrets.INFRA_PAT }}
          repository: yyev89/provedcode-project-infrastructure
          event-type: frontend_image_tag
          client-payload: |-
            {
              "repo": "${{ github.repository }}",
              "image_tag": "${{ needs.generate-image-tag.outputs.image_tag }}"
            }